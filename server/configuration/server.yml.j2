---

users:
  - name: admin
    role: admin

  - name: artemis

ssh-keys:
  - name: master-key
    owner: artemis
    file: {{ env("PWD") }}/master-key.yaml

priority-groups:
  - name: default-priority

guest_tags: {{ guest_tags }}

pools:
  {% if openstack is defined %}
  - name: openstack
    driver: openstack
    {% if openstack.guest_tags is defined %}
    guest_tags: {{ openstack.guest_tags }}
    {% endif %}
    parameters:
      username: "{{ openstack.credentials.username }}"
      password: "{{ openstack.credentials.password }}"
      auth-url: "{{ openstack.credentials.auth_url }}"
      project-name: "{{ openstack.credentials.project_name }}"
      {% if openstack.credentials.project_domain_id is defined and openstack.credentials.project_domain_id != "" %}
      project-domain-id: "{{ openstack.credentials.project_domain_id }}"
      {% endif %}
      {% if openstack.credentials.project_domain_name is defined and openstack.credentials.project_domain_name != "" %}
      project-domain-name: "{{ openstack.credentials.project_domain_name }}"
      {% endif %}
      user-domain-name: "{{ openstack.credentials.user_domain_name }}"
      api-version: "{{ openstack.credentials.identity_api_version }}"
      master-key-name: "{{ openstack.vms.keyname }}"
      security-group: "{{ openstack.vms.security_group }}"

      default-flavor: "{{ openstack.vms.default_flavor }}"
      network-regex: '{{ openstack.vms.network_regex }}'
      flavor-regex: '{{ flavor_regex | default('') }}'
      ip-version: "4"
      post-install-script: "{{ openstack.vms.post_install_script }}"

      capabilities:
        supports-snapshots: true
        supports-spot-instances: false
        supported-architectures:
          - x86_64

      resources: {{ openstack.resources | default("{}") }}

  {% endif %}

  {% if azure is defined %}
  - name: azure
    driver: azure
    {% if azure.guest_tags is defined %}
    guest_tags: {{ azure.guest_tags }}
    {% endif %}
    parameters:
      username: "{{ azure.credentials.username }}"
      password: "{{ azure.credentials.password }}"
      resource-group: "{{ azure.vms.resource_group }}"
      post-install-script: "{{ azure.vms.post_install_script }}"

      capabilities:
        # snapshot feature is not yet implemented for Azure driver
        supports-snapshots: false
        supports-spot-instances: false
        supported-architectures:
          - x86_64

      resources: {{ openstack.resources | default("{}") }}
  {% endif %}

  {% if aws is defined %}
  - name: aws
    driver: aws
    {% if aws.guest_tags is defined %}
    guest_tags: {{ aws.guest_tags }}
    {% endif %}
    parameters:
      access-key-id: "{{ aws.credentials.access_key_id }}"
      secret-access-key: "{{ aws.credentials.secret_access_key }}"
      default-region: "{{ aws.default_region }}"

      command: aws
      master-key-name: "{{ aws.vms.keyname }}"

      # availability zone match chosen subnet
      availability-zone: "{{ aws.vms.availability_zone }}"
      subnet-id: "{{ aws.vms.subnet_id }}"
      security-group: "{{ aws.vms.security_group }}"
      # instance details
      default-instance-type: "{{ aws.vms.default_flavor }}"

      # By default, non-spot instances are launched in the pool. If you
      # would like to use spot instances instead, enable this option.
      use-spot-request: {{ aws.vms.use_spot_request | default(true) }}

      # How many % we bid on the spot instance price. Raise this if you
      # get too many instances terminated.
      spot-price-bid-percentage: {{ aws.vms.spot_price_bid_percentage | default(10) }}

      # Wait timeout/tick for fulfilling spot request
      spot-request-timeout: {{ aws.vms.spot_request_timeout | default(60) }}
      spot-request-tick: {{ aws.vms.spot_request_tick | default(1) }}

      # wait timeout/tick for instance becoming running
      instance-running-timeout: 120
      instance-running-tick: 1

      post-install-script: "{{ aws.vms.post_install_script }}"

      capabilities:
        supports-snapshots: False
        supports-spot-instances: {{ aws.vms.use_spot_instances | default(true) }}
        supported-architectures:
          - x86_64

      resources: {{ openstack.resources | default("{}") }}
  {% endif %}

  {% if beaker is defined %}
  - name: beaker
    driver: beaker
    {% if beaker.guest_tags is defined %}
    guest_tags: {{ beaker.guest_tags }}
    {% endif %}
    parameters:
      {% if beaker.credentials.username is defined and beaker.credentials.username != "" -%}
      username: "{{ beaker.credentials.username }}"
      {% endif -%}
      {% if beaker.credentials.password is defined and beaker.credentials.password != "" -%}
      password: "{{ beaker.credentials.password }}"
      {% endif -%}

      capabilities:
        supports-snapshots: False
        supports-spot-instances: false
        # supports any architecture - there may be other constraints based on distro vs. arch support,
        # but in general, Beaker is open
        supported-architectures: any

      resources: {{ openstack.resources | default("{}") }}
  {% endif %}
