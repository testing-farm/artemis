# Many clouds and clusters allow users to apply labels, "tags", to resources like VMs. Artemis can do that
# for you to mark cloud instances it allocated and manages.
#
# Each tag consists of name and value, and it is applied using cloud-specific tools during the provisioning process.
# The tags are split into system-wide and pool tags where system-wide tags are applied to all guests while the pool
# tags only to guests provisioned from that particular pool.
#
# Feel free to add, remove and change the tags to fit your situation. To have something to start with, we prepared
# one tag to mark the instances with `ServiceName: Artemis` label so you could tell which are managed by Artemis.
#
# * https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/tag-resources
# * https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html
# * https://docs.ukcloud.com/articles/openstack/ostack-how-use-instance-metadata.html
guest_tags:
  ServiceName: Artemis

openstack:
  credentials:
    # as found in the openrc file
    username: ""
    password: ""
    auth_url: ""
    project_name: ""
    # Set one or the other, if both are set, project_domain_name is used.
    project_domain_name: ""
    project_domain_id: ""
    user_domain_name: ""
    identity_api_version: ""
  vms:
    default_flavor: ci.m1.small
    network_regex: '^provider_net_cci_\d+$'
    security_group: default
    keyname: ""
    post_install_script: "./configuration/userdata_allow_root"

  # Pool-specific tags, applied to all instances. Adjust when needed, remove or add new ones.
  # guest_tags:
  #   ATag: ItsValue

  # Enforcement of limits. All pools periodically update their resource usage and limits, but if you Feel
  # the need to enforce different values (e.g. lower than the real ones), then uncomment the following
  # block and the particular resources you wish to override.
  # resources:
  #   limits:
  #     instances: ...
  #     cores: ...
  #     memory: ...
  #     diskspace: ...
  #     snapshots: ...

# NOTE(ivasilev) For the moment only one Azure cloud is supported
azure:
  credentials:
    username: ""
    password: ""
  vms:
    # name of the existing resource_group that will be used to create vms
    resource_group: ""
    post_install_script: "./configuration/userdata_allow_root"

  # Pool-specific tags, applied to all instances. Adjust when needed, remove or add new ones.
  # guest_tags:
  #   ATag: ItsValue

  # Enforcement of limits. All pools periodically update their resource usage and limits, but if you Feel
  # the need to enforce different values (e.g. lower than the real ones), then uncomment the following
  # block and the particular resources you wish to override.
  # resources:
  #   limits:
  #     instances: ...
  #     cores: ...
  #     memory: ...
  #     diskspace: ...
  #     snapshots: ...

aws:
  default_region: ""
  credentials:
    access_key_id: ""
    secret_access_key: ""
  vms:
    keyname: ""
    availability_zone: ""
    subnet_id: ""
    security_group: ""
    default_flavor: t2.small
    post_install_script: "./configuration/userdata_allow_root"

    # By default, for EBS backed instances, AWS sets the default root disk size
    # according to the disk size specified in the AMI. In most AMIs
    # the disk size is small and can be different for each AMI.
    #
    # Artemis can enforce a fixed root disk size using the following option.
    # default-root-disk-size: 40  # set root disk size to 40GB

    # By default, non-spot instances are launched in the pool. If you
    # would like to use spot instances instead, enable this option.
    # use_spot_request: true

    # How many % we bid on the spot instance price. Raise this if you
    # get too many instances terminated.
    # spot_price_bid_percentage: 10

    # Wait timeout/tick for fulfilling spot request
    # spot_request_timeout: 60
    # spot_request_tick: 1

  # Pool-specific tags, applied to all instances. Adjust when needed, remove or add new ones.
  # guest_tags:
  #   ATag: ItsValue

  # Enforcement of limits. All pools periodically update their resource usage and limits, but if you Feel
  # the need to enforce different values (e.g. lower than the real ones), then uncomment the following
  # block and the particular resources you wish to override.
  # resources:
  #   limits:
  #     instances: ...
  #     cores: ...
  #     memory: ...
  #     diskspace: ...
  #     snapshots: ...

beaker:
  credentials:
    # Your beaker username\password if you want to use per-request auth.
    # If left empty beaker will rely on kerberos to do the auth.
    # username: ""
    # password: ""

  # Pool-specific tags, applied to all instances. Adjust when needed, remove or add new ones.
  # guest_tags:
  #   ATag: ItsValue

  # Enforcement of limits. All pools periodically update their resource usage and limits, but if you Feel
  # the need to enforce different values (e.g. lower than the real ones), then uncomment the following
  # block and the particular resources you wish to override.
  # resources:
  #   limits:
  #     instances: ...
  #     cores: ...
  #     memory: ...
  #     diskspace: ...
  #     snapshots: ...

keys:
  master:
    # ssh key fingerprint
    fingerprint: ""
    public: |
      ssh-rsa YOURSSHPUBLICKEY
    private: |
      YOURSSHPRIVATEKEY (including "BEGIN" and "END" delimiters)
