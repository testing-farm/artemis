# commands = mypy --config-file {toxinidir}/mypy.ini --strict --allow-untyped-calls \

[tox]
envlist = py37,py37-database-migrations

[testenv]
whitelist_externals = poetry
                      bash

# Skip package installation - we will run `poetry install` as the first "test" command.
# This is more consistent with everyday use.
skip_install = true
skipsdist = true

# Don't spoil our nice virtualenvs with system packages
sitepackages = False

# Pass necessary env vars to let CI and coverage gathering play together nicely
passenv = CI TRAVIS TRAVIS_*

setenv =
  MYPYPATH = {toxinidir}/src

commands_pre = poetry install -v

commands = pytest --flake8 \
                  alembic \
                  configuration \
                  src/tft
           pytest -v -ra tests
           mypy --config-file {toxinidir}/mypy.ini \
                --strict \
                {toxinidir}/src/tft
           mypy --config-file {toxinidir}/mypy.ini \
                --strict \
                --namespace-packages \
                {toxinidir}/configuration
           mypy --config-file {toxinidir}/mypy.ini \
                --strict \
                --namespace-packages \
                {toxinidir}/alembic

[testenv:py37-database-migrations]
commands = bash -c 'rm -f test.db'
           poetry run alembic upgrade head
           bash -c 'poetry run alembic revision --autogenerate |& grep "No changes to schema detected"'
           poetry run alembic downgrade base

[flake8]
max-line-length = 120
