# Copyright Contributors to the Testing Farm project.
# SPDX-License-Identifier: Apache-2.0

"""
Introduce guest log blobs

Revision ID: 43204dc08933
Revises: ec3239807678
Create Date: 2024-03-11 15:02:33.977026

"""

from typing import Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '43204dc08933'
down_revision = 'ec3239807678'
branch_labels = None
depends_on = None


def get_enum_type() -> Union[sa.Enum, postgresql.ENUM]:
    if op.get_bind().dialect.name == 'postgresql':
        return postgresql.ENUM(name='guestlogcontenttype', create_type=False)

    return sa.Enum(name='guestlogcontenttype', create_type=False)


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    op.create_table(
        'guest_log_blobs',
        sa.Column('guestname', sa.String(), nullable=False),
        sa.Column('logname', sa.String(), nullable=False),
        sa.Column('contenttype', get_enum_type(), nullable=False),
        sa.Column('ctime', sa.DateTime(), nullable=False),
        sa.Column('content', sa.Text(), server_default='', nullable=False),
        sa.ForeignKeyConstraint(
            ['guestname', 'logname', 'contenttype'],
            ['guest_logs.guestname', 'guest_logs.logname', 'guest_logs.contenttype'],
        ),
        sa.PrimaryKeyConstraint('guestname', 'logname', 'contenttype', 'ctime'),
    )

    with op.batch_alter_table('guest_logs', schema=None) as batch_op:
        batch_op.drop_column('blob')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('guest_logs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('blob', sa.VARCHAR(), nullable=True))

    op.drop_table('guest_log_blobs')
    # ### end Alembic commands ###
