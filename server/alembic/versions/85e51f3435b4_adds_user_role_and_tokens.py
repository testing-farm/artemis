# Copyright Contributors to the Testing Farm project.
# SPDX-License-Identifier: Apache-2.0

"""
Adds user role and tokens

Revision ID: 85e51f3435b4
Revises: 2a205a7d6150
Create Date: 2020-09-16 13:40:01.642000

"""
from typing import Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = '85e51f3435b4'
down_revision = '2a205a7d6150'
branch_labels = None
depends_on = None


def get_enum_type() -> Union[sa.Enum, postgresql.ENUM]:
    if op.get_bind().dialect.name == 'postgresql':
        enum = postgresql.ENUM(
            'USER',
            'ADMIN',
            name='userroles',
            create_type=False
        )

        enum.create(op.get_bind())

        return enum

    return sa.Enum(
        'USER',
        'ADMIN',
        name='userroles'
    )


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('admin_token', sa.String(length=32), server_default='undefined', nullable=False))
        batch_op.add_column(
            sa.Column('provisioning_token', sa.String(length=32), server_default='undefined', nullable=False)
        )
        batch_op.add_column(
            sa.Column('role', get_enum_type(), server_default='USER', nullable=False)
        )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('role')
        batch_op.drop_column('provisioning_token')
        batch_op.drop_column('admin_token')

    if op.get_bind().dialect.name == 'postgresql':
        batch_op.execute("DROP TYPE userroles;")

    # ### end Alembic commands ###
