[tool.poetry]
name = "tft-artemis"
version = "0.0.3"
description = "Artemis is a machine provisioning service. Its goal is to provision a machine - using a set of preconfigured providers as backends - which would satisfy the given hardware and software requirements."
authors = [
  "Milos Prchlik <mprchlik@redhat.com>",
  "Anna Khaitovich <akhaitov@redhat.com>",
  "Evgeny Fedin <efedin@redhat.com>",
  "Miroslav Vadkerti <mvadkert@redhat.com>",
  "Ondrej Ptak <optak@redhat.com>",
]
license = "Apache-2.0"
packages = [
  { include = "tft", from = "src" }
]

[tool.poetry.dependencies]
python = "^3.7"
ansible-vault = "^1.2.0"
awscli = "^1.16.298"
beaker-client = "^27.0"
beautifulsoup4 = "^4.6.3"
dramatiq = { version = "^1.7.0", extras = ["rabbitmq", "watch"] }
gluetool = "^1.22"
gunicorn = "19.9.0"
molten = "^0.7.4"
psycopg2 = "2.8.4"
python-openstackclient = "^5.0.0"
sqlalchemy = "^1.3.12"
stackprinter = "^0.2.4"
typing-extensions = "^3.7.4"

[tool.poetry.dev-dependencies]
flake8 = "*"
pytest = "*"
mypy = "0.720"
mypy-extensions = "0.4.1"
pytest-flake8 = "*"
pytest-mock = "*"
sqlalchemy-stubs = "*"

[tool.poetry.scripts]
artemis-api-server = "tft.artemis.api:main"
artemis-dispatcher = "tft.artemis.dispatcher:main"
artemis-init-sqlite-schema = "tft.artemis.db:init_sqlite"
artemis-init-postgres-schema = "tft.artemis.db:init_postgres"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
