FORMAT: 1A
HOST: https://artemis6.docs.apiary.io

# Artemis

This document describes version **0.0.1** of the API. All endpoints must start with `/v0.0.1/` prefix.

**Artemis** is an API of a machine provisioning service. Its goal is to provision a machine - using a set of
preconfigured providers as backends - which would satisfy the given hardware and software requirements.

After adding one or more *SSH keys*, users request provisioning of *guests*, describing the desired hardware and
software configuration of each guest. Requests are matched with one or more *pools* - each pool represents one
provisioning service like AWS, Azure or private OpenStack instance, each with its own set of available machine
setups it can provide - and a machine is acquired from the most suitable pool.

Each provisioning request is asynchronous by its nature: user submits a request and receives a request ID.
User then periodically checks status of the request until the request becomes ready. From that moment on,
until canceled, the guest is available and reserved for the user.

Pools and users deal with limited resources - number of guests, amount of RAM or disk space. Requests are sorted
into several *priority groups* - given the current usage of resources, some priority groups may become more important
than others. Pools and users are given limits on how many resources they can provide or consume, respectively.

**NOTE:** for the sake of simplicity, the only defined part of the workflow is manipulation of guest requests.
The remaining parts - users, SSH keys, pools - will be added in the future extensions.

**NOTE:** the actual specification of format environment is described depends on other project - we need to
link these two specs together.


## Guests [/guest]

"Guest" stands for a remote machine that accepts SSH connections, and satisfies given environmental requirements.

A guest has an ID, called `guestname`. When user makes a provisioning request, response contains the ID. User may own
multiple requests, each provisioning one guest.

### Create guest request [POST /guests]

- Request (application/json)

    - Headers

            Authorization: Basic ABC123

    - Attributes (Guest request)

- Response 201 (application/json)

    - Headers

            Location: /guest/{guestname}

    - Attributes (Guest info)

- Response 401 (application/json)

    - Headers

            WWW-Authenticate: Basic realm="protected"

    - Attributes (ErrorUnauthorized)

- Response 403 (application/json)

    - Attributes (ErrorForbidden)

- Response 500 (application/json)

    - Attributes (Error)

### Inspect guest request [GET /guests/{guestname}]

- Parameters

    - guestname (string) - ID of the guest.

- Request

    - Headers

            Authorization: Basic ABC123

- Response 200 (application/json)

    - Attributes (Guest info)

- Response 401 (application/json)

    - Headers

            WWW-Authenticate: Basic realm="protected"

    - Attributes (ErrorUnauthorized)

- Response 403 (application/json)

    - Attributes (ErrorForbidden)

- Response 404 (application/json)

    - Attributes (ErrorNotFound)

### Cancel guest request [DELETE /guests/{guestname}]

- Parameters

    - guestname (string) - ID of the guest.

- Request

    - Headers

            Authorization: Basic ABC123

- Response 200

- Response 401 (application/json)

    - Headers

            WWW-Authenticate: Basic realm="protected"

    - Attributes (ErrorUnauthorized)

- Response 403 (application/json)

    - Attributes (ErrorForbidden)

- Response 404 (application/json)

    - Attributes (ErrorNotFound)


## Data Structures

### Error

- message (string, required) - verbose description of the error.

### ErrorNotFound

- message: No such entity (string, required) - verbose description of the error.

### ErrorUnauthorized

- message: Not authorized to perform this action (string, required) - verbose description of the error.

### ErrorForbidden

- message: Not authorized to perform this action (string, required) - verbose description of the error.

### ErrorConflict

- message: Object already exists. (string, required) - verbose description of the error.

### Guest SSH info

- username (string, required) - SSH username to use when logging in.
- port (number, required)
- keyname (string, required) - name of the SSH key set up on the guest.

### Guest environment

- requested (Environment, required) - the requested environment.
- actual (Environment) - an actual environment - it *may* differ from the requested one if the service was allowed to diverge from the request, and it was impossible to follow the request perfectly.

### Environment compose

- name (string) - Name of the compose.
- url (string) - URL of the compose. If present, it overrides `name`.

### Environment

- arch (string, required) - Architecture.
- compose (Environment compose, required) - OS compose.

### Guest info

- guestname (string, required) - Name of the guest as specified in a response to a provisioning request.
- owner (string, required) - Owner of the guest.
- priority (string, required) - Priority group of the request.
- environment (Guest environment, required) - Environment descriptions of this guest.
- address (array[string]) - List of IP addresses of the guest. Valid only when `state` is `ready`.
- ssh (Guest SSH info) - SSH connection details. Valid only when `state` is `ready`.
- state (enum) - current state of the guest. Valid only when `state` is `ready`.
  - error - something wrong happened.
  - pending - guest request is being evaluate.
  - provisioning - guest is being provisioned from a pool.
  - ready - guest is ready and may be used.
  - condemned - guest is being removed.

### Guest request

- environment (Environment, required) - Requested environment of the guest.
- keyname (string, required) - SSH key to set up.
- priority_group (string) - name of a *priority group* the request belongs to.
